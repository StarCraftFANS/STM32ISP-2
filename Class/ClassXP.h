


////////////////////////////////////////////////////////////////////////////////////////////////////
// 工程: ClassXP
// 版本: 0.32
// 更新: 2003-3-10
// 说明: 
//       一、简介
//           ClassXP 是一个为 Windows 98/ME/2000/XP 系统而设计的控件界面库。使用 ClassXP 能非常简单
//       快速地把应用程序界面设置成 Windows XP 的风格。
//
//       二、使用方法
//           ClassXP 开发语言为 Win32SDK/C。如果使用 C++ 类的组织代码将会使编写难度大大降低，但是考
//       虑到在 C 中使用以及效率问题，ClassXP 使用了非 OOP 的编程语言，借用了 OOP 的思维方法。因此，
//       ClassXP 的源代码可以直接在 Visual C++ 的 Win32SDK 和 MFC 等工程中使用。ClassXP 在编写过程中
//       使用的编译环境是 Visual Studio .NET 2002 或 Visual C++ 6.0，可以用两种方式编译:
//
//       1.动态连接库方式
//         (1).在 Visual C++ 中建立空的动态连接库工程，将 ClassXP.c 和 ClassXP.h 文件加入到工程中。
//         (2).编译连接生成动态连接库，其中导出函数 ClassXP()，可在所有的语言中使用。
//
//       2.源代码方式
//         (1).在 Visual C++ 的工程中加入 ClassXP.c 和 ClassXP.h 文件。
//         (2).在要使用 ClassXP() 函数的文件中加入『#include "ClassXP.h"』，然后在调用它。
//
//       三、注意事项
//
//       1.ClassXP 使用了 Windows 中的一些新特性，需要在 Windows 98 及其以上版本中才能使用。
//       2.目前只能将 PushButton、CheckBox、EditBox 和 ComboBox 设置为 ClassXP 风格，这些都没有用到
//         图片，全部都是高效的 GDI 画出来的，有兴趣的话看看源代码……
//
////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////
// 编译预处理
#pragma once
#ifdef _USRDLL
// 定义为连接方式，指定编译为动态连接库
#define CXP_DLLMODE
#endif
////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////
#ifdef __cplusplus
extern "C" BOOL WINAPI ClassXP(HWND hWnd = NULL, BOOL bEnable = TRUE);
#else // __cplusplus
BOOL WINAPI ClassXP(HWND hWnd, BOOL bEnable);
#endif // __cplusplus
// 功能: 设置或取消 ClassXP 风格
// 参数:
//       hWnd		指定要设置或取消窗口的句柄，如果为 NULL 则影响当前线程的所有窗口
//       bEnable	指定设置或取消 ClassXP 风格， TRUE 表示设置，FALSE 表示取消
//
// 返回: TRUE 表示成功，FALSE 表示失败
////////////////////////////////////////////////////////////////////////////////////////////////////



